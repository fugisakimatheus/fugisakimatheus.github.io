{"version":3,"sources":["components/RepositoryItem.tsx","store/ducks/repositories/types.ts","store/ducks/repositories/actions.ts","assets/profile.png","pages/profile.tsx","store/ducks/repositories/index.ts","store/ducks/rootReducer.ts","services/api.ts","store/ducks/repositories/sagas.ts","store/ducks/rootSaga.ts","store/index.ts","App.tsx","index.tsx"],"names":["RepositoryItem","repository","id","href","html_url","target","name","description","className","topics","join","RepositoriesTypes","loadRequest","action","LOAD_REQUEST","loadSuccess","data","LOAD_SUCCESS","loadFailure","LOAD_FAILURE","connect","repositories","dispatch","bindActionCreators","RepositoriesActions","props","useEffect","src","PersonImage","alt","style","width","display","alignItems","justifyContent","size","map","INITIAL_STATE","error","loading","reducer","state","type","payload","combineReducers","api","axios","create","baseURL","load","call","get","fugisakimatheus","fugisaki","put","concat","rootSaga","all","takeLatest","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2YAOe,SAASA,EAAT,GAAmD,IAAzBC,EAAwB,EAAxBA,WACvC,OACE,mBAAGC,GAAG,kBAAkBC,KAAMF,EAAWG,SAAUC,OAAO,SAA1D,SACE,sBAAKH,GAAG,kBAAR,UACE,iCAASD,EAAWK,OACnBL,EAAWM,aAAe,sBAAMC,UAAU,cAAhB,SAA+BP,EAAWM,cACpEN,EAAWQ,QAAU,uBAAMD,UAAU,SAAhB,yBAAmCP,EAAWQ,OAAOC,KAAK,c,ICV5EC,E,iCAAAA,K,0CAAAA,E,0CAAAA,E,2CAAAA,M,KCAL,IAAMC,EAAc,kBAAMC,iBAAOF,EAAkBG,eAE7CC,EAAc,SAACC,GAAD,OAAwBH,iBAAOF,EAAkBM,aAAc,CAAED,UAE/EE,EAAc,kBAAML,iBAAOF,EAAkBQ,eCP3C,MAA0B,oC,MC6GzC,IAMeC,eANS,SAAC,GAAD,MAAyC,CAC/DC,aADsB,EAAGA,aACEL,SAGF,SAACM,GAAD,OAAwBC,YAAmBC,EAAqBF,KAE5EF,EAxFf,SAAiBK,GAEfC,qBAAU,YAERd,EADwBa,EAAhBb,iBAEP,IAL0B,IAQrBS,EAAiBI,EAAjBJ,aAER,OACE,sBAAKnB,GAAG,eAAR,UACE,kCACE,qBAAKyB,IAAKC,EAAaC,IAAI,qBAC3B,sBAAKrB,UAAU,eAAesB,MAAO,CAAEC,MAAO,QAA9C,UACE,sBAAKD,MAAO,CAAEE,QAAS,OAAQC,WAAY,SAAUC,eAAgB,gBAAiBH,MAAO,QAA7F,UACE,sDACA,sBAAKvB,UAAU,sBAAf,UACE,mBAAGL,KAAK,qCAAqCE,OAAO,SAApD,SACE,cAAC,IAAD,CAAc8B,KAAK,WAGrB,mBAAGhC,KAAK,6CAA6CE,OAAO,SAA5D,SACE,cAAC,IAAD,CAAiB8B,KAAK,WAGxB,mBAAGhC,KAAK,gDAAgDE,OAAO,SAA/D,SACE,cAAC,IAAD,CAAgB8B,KAAK,iBAI3B,oDACA,0BAAS3B,UAAU,cAAnB,UACE,4CACA,+BACE,yDACA,iEACA,+CACA,0CACA,8DAKN,yBAAQA,UAAU,eAAlB,UACE,mDACA,mBAAGL,KAAK,qCAAqCE,OAAO,SAApD,SACE,cAAC,IAAD,CAAc8B,KAAK,WAGrB,mBAAGhC,KAAK,6CAA6CE,OAAO,SAA5D,SACE,cAAC,IAAD,CAAiB8B,KAAK,WAGxB,mBAAGhC,KAAK,gDAAgDE,OAAO,SAA/D,SACE,cAAC,IAAD,CAAgB8B,KAAK,iBAK3B,uBAAM3B,UAAU,eAAhB,UACE,0BAASA,UAAU,qBAAnB,UACE,4CACA,sBAAKA,UAAU,iBAAf,UACE,2DACA,mEACA,iDACA,4CACA,6DAGJ,wBAAQA,UAAU,QAAlB,0BACA,qBAAKA,UAAU,aAAf,SACGa,EAAae,KAAI,SAAAnC,GAAU,OAAI,cAACD,EAAD,CAAoCC,WAAYA,GAA3BA,EAAWC,YAIpE,wBAAQM,UAAU,iBAAlB,gD,gBCrGA6B,EAAmC,CACvCrB,KAAM,GACNsB,OAAO,EACPC,SAAS,GAgBIC,EAb6B,WAAoC,IAAnCC,EAAkC,uDAA1BJ,EAAexB,EAAW,uCAC7E,OAAQA,EAAO6B,MACb,KAAK/B,EAAkBG,aACrB,OAAO,2BAAK2B,GAAZ,IAAmBF,SAAS,IAC9B,KAAK5B,EAAkBM,aACrB,OAAO,2BAAKwB,GAAZ,IAAmBF,SAAS,EAAOD,OAAO,EAAOtB,KAAMH,EAAO8B,QAAQ3B,OACxE,KAAKL,EAAkBQ,aACrB,OAAO,2BAAKsB,GAAZ,IAAmBF,SAAS,EAAOD,OAAO,EAAMtB,KAAM,KACxD,QACE,OAAOqB,ICdEO,cAAgB,CAC7BvB,iB,gCCCawB,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,2B,WCEMC,GAAV,SAAUA,IAAV,yEAEqB,OAFrB,kBAE2BC,YAAKL,EAAIM,IAAK,+BAFzC,OAGc,OADXC,EAFH,gBAGoBF,YAAKL,EAAIM,IAAK,wBAHlC,OAKH,OAFME,EAHH,gBAKGC,YAAIvC,EAAYqC,EAAgBpC,KAAKuC,OAAOF,EAASrC,QALxD,+BAOH,OAPG,oCAOGsC,YAAIpC,KAPP,sD,eCAkBsC,GAAV,SAAUA,IAAV,iEACN,OADM,SACAC,YAAI,CACfC,YAAW/C,EAAkBG,aAAcmC,KAFhC,+ECMf,IAAMU,EAAiBC,cAEjBC,EAAiCC,YAAYC,EAAaC,YAAgBL,IAEhFA,EAAeM,IAAIT,GAEJK,QCFAK,MARf,WACE,OACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,O,MCJNM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d627fb80.chunk.js","sourcesContent":["import { Repository } from 'store/ducks/repositories/types';\r\nimport 'styles/repository-item.scss';\r\n\r\ninterface OwnProps {\r\n  repository: Repository\r\n}\r\n\r\nexport default function RepositoryItem({ repository }: OwnProps) {\r\n  return (\r\n    <a id=\"repository-link\" href={repository.html_url} target=\"_blank\">\r\n      <div id=\"repository-item\">\r\n        <strong>{repository.name}</strong>\r\n        {repository.description && <span className=\"description\">{repository.description}</span>}\r\n        {repository.topics && <span className=\"topics\">TÃ³picos: {repository.topics.join(', ')}</span>}\r\n      </div>\r\n    </a>\r\n  )\r\n}\r\n","/**\r\n * Action types\r\n */\r\nexport enum RepositoriesTypes {\r\n  LOAD_REQUEST = '@repositories/LOAD_REQUEST',\r\n  LOAD_SUCCESS = '@repositories/LOAD_SUCCESS',\r\n  LOAD_FAILURE = '@repositories/LOAD_FAILURE',\r\n};\r\n\r\n/**\r\n * Data types\r\n */\r\nexport interface Repository {\r\n  id: number\r\n  name: string\r\n  html_url: string\r\n  description: string\r\n  topics: string[]\r\n  created_at: string\r\n}\r\n\r\n/**\r\n * State type\r\n */\r\nexport interface RepositoriesState {\r\n  readonly data: Repository[]\r\n  readonly loading: boolean\r\n  readonly error: boolean\r\n}\r\n","import { action } from 'typesafe-actions';\r\nimport { RepositoriesTypes, Repository } from './types';\r\n\r\nexport const loadRequest = () => action(RepositoriesTypes.LOAD_REQUEST);\r\n\r\nexport const loadSuccess = (data: Repository[]) => action(RepositoriesTypes.LOAD_SUCCESS, { data });\r\n\r\nexport const loadFailure = () => action(RepositoriesTypes.LOAD_FAILURE);\r\n","export default __webpack_public_path__ + \"static/media/profile.bf765db6.png\";","import { useEffect } from 'react'\r\nimport RepositoryItem from 'components/RepositoryItem';\r\n\r\nimport { AiFillGithub, AiFillInstagram, AiFillLinkedin } from 'react-icons/ai';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\n\r\nimport { ApplicationState } from 'store'\r\nimport { Repository } from 'store/ducks/repositories/types';\r\nimport * as RepositoriesActions from 'store/ducks/repositories/actions';\r\n\r\nimport PersonImage from 'assets/profile.png';\r\nimport 'styles/profile.scss'\r\n\r\ninterface StateProps {\r\n  repositories: Repository[]\r\n}\r\n\r\ninterface DispatchProps {\r\n  loadRequest(): void\r\n  loadSuccess(data: Repository[]): void\r\n  loadFailure(): void\r\n}\r\n\r\ntype Props = StateProps & DispatchProps\r\n\r\nfunction Profile(props: Props) {\r\n\r\n  useEffect(() => {\r\n    const { loadRequest } = props;\r\n    loadRequest();\r\n  }, []);\r\n\r\n\r\n  const { repositories } = props;\r\n\r\n  return (\r\n    <div id=\"page-profile\">\r\n      <aside>\r\n        <img src={PersonImage} alt=\"Matheus Fugisaki\" />\r\n        <div className=\"profile-info\" style={{ width: '100%' }}>\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\r\n            <strong>Matheus Fugisaki</strong>\r\n            <div className=\"social-media-mobile\">\r\n              <a href=\"https://github.com/fugisakimatheus\" target=\"_blank\">\r\n                <AiFillGithub size=\"22px\" />\r\n              </a>\r\n\r\n              <a href=\"https://www.instagram.com/matheusfugisaki/\" target=\"_blank\">\r\n                <AiFillInstagram size=\"22px\" />\r\n              </a>\r\n\r\n              <a href=\"https://www.linkedin.com/in/matheus-fugisaki/\" target=\"_blank\">\r\n                <AiFillLinkedin size=\"22px\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <p>Front-end developer</p>\r\n          <section className=\"skills-list\">\r\n            <strong>Skills</strong>\r\n            <ul>\r\n              <li>Javascript / Typescript</li>\r\n              <li>React.js / React Native - Redux</li>\r\n              <li>Vue.js - Vuex</li>\r\n              <li>Electron</li>\r\n              <li>CSS / SASS / Stylus</li>\r\n            </ul>\r\n          </section>\r\n        </div>\r\n\r\n        <footer className=\"social-media\">\r\n          <strong>Social Media:</strong>\r\n          <a href=\"https://github.com/fugisakimatheus\" target=\"_blank\">\r\n            <AiFillGithub size=\"20px\" />\r\n          </a>\r\n\r\n          <a href=\"https://www.instagram.com/matheusfugisaki/\" target=\"_blank\">\r\n            <AiFillInstagram size=\"20px\" />\r\n          </a>\r\n\r\n          <a href=\"https://www.linkedin.com/in/matheus-fugisaki/\" target=\"_blank\">\r\n            <AiFillLinkedin size=\"20px\" />\r\n          </a>\r\n        </footer>\r\n      </aside>\r\n\r\n      <main className=\"main-content\">\r\n        <section className=\"skills-list-mobile\">\r\n          <strong>Skills</strong>\r\n          <div className=\"skills-content\">\r\n            <span>Javascript / Typescript</span>\r\n            <span>React.js / React Native - Redux</span>\r\n            <span>Vue.js - Vuex</span>\r\n            <span>Electron</span>\r\n            <span>CSS / SASS / Stylus</span>\r\n          </div>\r\n        </section>\r\n        <strong className=\"title\">Repositories</strong>\r\n        <div className=\"items-list\">\r\n          {repositories.map(repository => <RepositoryItem key={repository.id} repository={repository} />)}\r\n        </div>\r\n      </main>\r\n\r\n      <footer className=\"profile-footer\">&copy; Matheus Fugisaki - 2021</footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ repositories }: ApplicationState) => ({\r\n  repositories: repositories.data,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators(RepositoriesActions, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import { Reducer } from 'redux';\r\nimport { RepositoriesState, RepositoriesTypes } from './types';\r\n\r\nconst INITIAL_STATE: RepositoriesState = {\r\n  data: [],\r\n  error: false,\r\n  loading: false,\r\n}\r\n\r\nconst reducer: Reducer<RepositoriesState> = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case RepositoriesTypes.LOAD_REQUEST:\r\n      return { ...state, loading: true };\r\n    case RepositoriesTypes.LOAD_SUCCESS:\r\n      return { ...state, loading: false, error: false, data: action.payload.data };\r\n    case RepositoriesTypes.LOAD_FAILURE:\r\n      return { ...state, loading: false, error: true, data: [] };\r\n    default:\r\n      return INITIAL_STATE;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport repositories from './repositories';\r\n\r\nexport default combineReducers({\r\n  repositories,\r\n});\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com',\r\n});\r\n\r\nexport default api;\r\n","import { call, put } from 'redux-saga/effects';\r\nimport api from 'services/api';\r\n\r\nimport { loadSuccess, loadFailure } from './actions';\r\n\r\nexport function* load(): any {\r\n  try {\r\n    const fugisakimatheus = yield call(api.get, 'users/fugisakimatheus/repos');\r\n    const fugisaki = yield call(api.get, 'users/fugisaki/repos');\r\n\r\n    yield put(loadSuccess(fugisakimatheus.data.concat(fugisaki.data)));\r\n  } catch (error) {\r\n    yield put(loadFailure());\r\n  }\r\n}\r\n","import { all, takeLatest } from 'redux-saga/effects';\r\n\r\nimport {RepositoriesTypes } from './repositories/types';\r\nimport { load } from './repositories/sagas';\r\n\r\nexport default function* rootSaga(): any {\r\n  return yield all([\r\n    takeLatest(RepositoriesTypes.LOAD_REQUEST, load)\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, Store } from 'redux';\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport { RepositoriesState } from './ducks/repositories/types';\r\n\r\nimport rootReducer from './ducks/rootReducer';\r\nimport rootSaga from './ducks/rootSaga';\r\n\r\nexport interface ApplicationState {\r\n  repositories: RepositoriesState\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store: Store<ApplicationState> = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport Profile from 'pages/profile'\n\nimport store from 'store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Profile />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}